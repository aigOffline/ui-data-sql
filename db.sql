-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.menu
(
    id bigserial NOT NULL,
    list_food character varying(50) COLLATE pg_catalog."default",
    unit_price integer,
    discount smallint,
    food_id integer,
    restaurant_id bigserial,
    name character varying,
    quantity integer,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.restaurants
(
    id bigint NOT NULL DEFAULT nextval('restaurants_id_seq'::regclass),
    name character varying(50) COLLATE pg_catalog."default",
    location character varying(50) COLLATE pg_catalog."default",
    price_range integer NOT NULL,
    CONSTRAINT restaurants_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    id bigint NOT NULL DEFAULT nextval('reviews_id_seq'::regclass),
    restaurant_id bigint NOT NULL,
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    review text COLLATE pg_catalog."default" NOT NULL,
    rating integer NOT NULL,
    CONSTRAINT reviews_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."order"
(
    id bigserial NOT NULL,
    order_date date NOT NULL,
    customer_id bigserial NOT NULL,
    quantity integer NOT NULL,
    pick_up_date integer NOT NULL,
    recipe integer NOT NULL,
    order_time time with time zone NOT NULL,
    pick_up_time time with time zone NOT NULL,
    delivery_time time with time zone NOT NULL,
    status smallint NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payment
(
    id bigserial NOT NULL,
    order_id bigserial NOT NULL,
    payment_date date NOT NULL,
    amount integer NOT NULL,
    payment_type integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id bigserial NOT NULL,
    first_name character varying NOT NULL,
    last_name character varying NOT NULL,
    mobile integer NOT NULL,
    email integer NOT NULL,
    user_type numeric NOT NULL,
    password character varying NOT NULL,
    restaurant_id bigserial NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_menu
(
    id bigserial NOT NULL,
    order_id bigserial NOT NULL,
    menu_id bigserial NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.menu
    ADD CONSTRAINT restaurant_fkey FOREIGN KEY (restaurant_id)
    REFERENCES public.restaurants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT reviews_restaurant_id_fkey FOREIGN KEY (restaurant_id)
    REFERENCES public.restaurants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT order_user_fkey FOREIGN KEY (customer_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payment
    ADD CONSTRAINT order_payment_fkey FOREIGN KEY (order_id)
    REFERENCES public."order" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."user"
    ADD CONSTRAINT restaurant_user_fkey FOREIGN KEY (restaurant_id)
    REFERENCES public.restaurants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_menu
    ADD CONSTRAINT order_fkey_id FOREIGN KEY (order_id)
    REFERENCES public."order" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_menu
    ADD CONSTRAINT menu_fkey_id FOREIGN KEY (menu_id)
    REFERENCES public.menu (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
